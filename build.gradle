buildscript {
  ext.versions = [
    'kotlin'    : '1.2.0-rc-39',
    'coroutines': '0.19.3',
  ]

  ext.deps = [
    'kotlin' : [
      'stdLib' : [
        'jre' : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
      ],
      'test' : [
        'jre' : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
      ],
      'coroutines': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
    ],
    'junit' : 'junit:junit:4.12'
  ]

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath "net.researchgate:gradle-release:2.4.0"
    classpath "honey:kgit:0.0.8"
  }

  repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://raw.github.com/chaschev/kgit/repository' }
    maven { url 'https://raw.github.com/chaschev/github-release-gradle-plugin/repository' }
  }
}

plugins {
//  id "org.ajoberstar.grgit" version "2.1.0"
}

apply plugin: 'org.jetbrains.kotlin.platform.jvm'
apply plugin: 'project-report'

//Shadow plugin & dependencies
apply plugin: 'java'
apply plugin: 'net.researchgate.release'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


dependencies {
  def withExcludes = { boolean excludeDesign ->
    return {
      exclude group: 'org.simpleframework', module: 'simple'
      if (excludeDesign) {
      }
    }
  }

  compile deps.kotlin.stdLib.jre

  compile "org.eclipse.jgit:org.eclipse.jgit:4.9.0.201710071750-r"

  compile "io.github.microutils:kotlin-logging:1.4.6"
  compile 'org.slf4j:slf4j-simple:1.7.25'
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"

  testCompile 'org.apache.logging.log4j:log4j-core:2.9.1'
  testCompile 'org.apache.logging.log4j:log4j-api:2.9.1'
  testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.9.1'

  testCompile 'com.nhaarman:mockito-kotlin:1.5.0'
  testCompile deps.kotlin.test.jre

  testCompile 'io.kotlintest:kotlintest:2.0.7'
}

group = 'honey'

def repoUrl = "https://github.com/chaschev/kgit.git"

def mavenPublishTask = new honey.vcs.git.MavenPublishTask(
  repoUrl, new File("build"),
  project.name, group, project.name, version
)


task beforePublish() {
 doLast{
   mavenPublishTask.initRepo()
 }
}

publish.dependsOn(beforePublish)

afterReleaseBuild.dependsOn(publish)

publish.doLast{
  mavenPublishTask.publishToGit()
}

//def mavenPublishTask = new MavenPublishTask()

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }

  repositories {
    maven {
      url "$buildDir/kgit-repository"
    }
  }
}


test {
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
}


kotlin {
  experimental {
    coroutines "enable"
  }
}

repositories {
  mavenCentral()
  maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
  jcenter()
}


release {
  failOnCommitNeeded = true
  failOnPublishNeeded = true
  failOnSnapshotDependencies = true
  failOnUnversionedFiles = false
  failOnUpdateNeeded = true
  revertOnFail = true
  preCommitText = ''
  preTagCommitMessage = 'gradle release - pre tag commit: '
  tagCommitMessage = 'gradle release - creating tag: '
  newVersionCommitMessage = 'gradle release - new version commit: '
  versionPropertyFile = 'gradle.properties'
  versionProperties = []
  buildTasks = ['build']

  scmAdapters = [
    net.researchgate.release.GitAdapter
  ]

  git {
    requireBranch = 'master'
    pushToRemote = 'origin'
    pushToBranchPrefix = ''
    commitVersionFileOnly = false
  }
}
